name: C++ Build & Test

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  # -------------------------------
  # Build job: builds the project and uploads the artifacts
  # -------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install all dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            git \
            python3 \
            python3-pip \
            libeigen3-dev \
            libtinyxml-dev
          sudo ldconfig

      - name: Configure & Build
        run: |
          cmake -S task_assignment -B task_assignment/build
          cmake --build task_assignment/build --parallel $(nproc)

      - name: Upload build and dependencies artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-and-deps
          path: task_assignment/build
          
  # -------------------------------
  # Test jobs: download artifacts and run specific tests
  # -------------------------------
  test_robot_state:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # This step is crucial for the test to find the library
      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libtinyxml-dev \
            libeigen3-dev \
            libconsole-bridge-dev
          sudo ldconfig
      
      - name: Download build and dependencies artifact
        uses: actions/download-artifact@v4
        with:
          name: build-and-deps
          path: task_assignment/build

      - name: Run Robot State Tests
        run: |
          chmod +x task_assignment/build/tests/test_robot_state
          export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
          cd task_assignment/build
          ctest -R test_robot_state --output-on-failure --verbose

  test_controllers:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

            # This step is crucial for the test to find the library
      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libtinyxml-dev \
            libeigen3-dev \
            libconsole-bridge-dev
          sudo ldconfig

      - name: Download build and dependencies artifact
        uses: actions/download-artifact@v4
        with:
          name: build-and-deps
          path: task_assignment/build

      - name: Run Controller Tests
        run: |
          chmod +x task_assignment/build/tests/test_controllers
          export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
          cd task_assignment/build
          ctest -R test_controllers --output-on-failure --verbose

  test_demos:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

            # This step is crucial for the test to find the library
      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libtinyxml-dev \
            libeigen3-dev \
            libconsole-bridge-dev
          sudo ldconfig

      - name: Download build and dependencies artifact
        uses: actions/download-artifact@v4
        with:
          name: build-and-deps
          path: task_assignment/build

      - name: Run Demo Tests
        run: |
          chmod +x task_assignment/build/tests/test_assignment
          export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
          cd task_assignment/build
          ctest -R test_demos --output-on-failure --verbose
